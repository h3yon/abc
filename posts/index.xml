<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - h3yon blog</title>
        <link>https://h3yon.github.io/posts/</link>
        <description>All Posts | h3yon blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 04 Sep 2022 14:47:34 &#43;0900</lastBuildDate><atom:link href="https://h3yon.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>3. Time Complixity - TapeEquilibrium</title>
    <link>https://h3yon.github.io/3_time_complexity_tapeequilibrium/</link>
    <pubDate>Sun, 04 Sep 2022 14:47:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/3_time_complexity_tapeequilibrium/</guid>
    <description><![CDATA[TapeEquilibrium Link: https://app.codility.com/programmers/lessons/3-time_complexity/tape_equilibrium/
A non-empty array A consisting of N integers is given. Array A represents numbers on a tape.
Any integer P, such that 0 &lt; P &lt; N, splits this tape into two non-empty parts: A[0], A[1], &hellip;, A[P − 1] and A[P], A[P + 1], &hellip;, A[N − 1].
The difference between the two parts is the value of: |(A[0] + A[1] + &hellip; + A[P − 1]) − (A[P] + A[P + 1] + &hellip; + A[N − 1])|]]></description>
</item>
<item>
    <title>3. Time Complexity - FrogJmp</title>
    <link>https://h3yon.github.io/3_time_complexity_frogjmp.md/</link>
    <pubDate>Sat, 03 Sep 2022 18:27:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/3_time_complexity_frogjmp.md/</guid>
    <description><![CDATA[FrogJmp Link: https://app.codility.com/programmers/lessons/3-time_complexity/frog_jmp/
A small frog wants to get to the other side of the road. The frog is currently located at position X and wants to get to a position greater than or equal to Y. The small frog always jumps a fixed distance, D.
Count the minimal number of jumps that the small frog must perform to reach its target.
Write a function:
def solution(X, Y, D)
that, given three integers X, Y and D, returns the minimal number of jumps from position X to a position equal to or greater than Y.]]></description>
</item>
<item>
    <title>2. Array - OddOccurrencesInArray</title>
    <link>https://h3yon.github.io/2_array_oddoccurrencesinarray/</link>
    <pubDate>Sat, 03 Sep 2022 17:47:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/2_array_oddoccurrencesinarray/</guid>
    <description><![CDATA[OddOccurrencesInArray Link: https://app.codility.com/programmers/lessons/2-arrays/odd_occurrences_in_array/
A non-empty array A consisting of N integers is given.
The array contains an odd number of elements, and each element of the array can be paired with another element that has the same value, except for one element that is left unpaired.
For example, in array A such that:
A[0] = 9 A[1] = 3 A[2] = 9.
A[3] = 3 A[4] = 9 A[5] = 7.]]></description>
</item>
<item>
    <title>2. Array - CyclicRotation</title>
    <link>https://h3yon.github.io/2_array_cyclicrotation/</link>
    <pubDate>Sat, 03 Sep 2022 16:47:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/2_array_cyclicrotation/</guid>
    <description><![CDATA[주제: Arrays CyclicRotation Link: https://app.codility.com/programmers/lessons/2-arrays/cyclic_rotation/
An array A consisting of N integers is given. Rotation of the array means that each element is shifted right by one index, and the last element of the array is moved to the first place. For example, the rotation of array A = [3, 8, 9, 7, 6] is [6, 3, 8, 9, 7] (elements are shifted right by one index and 6 is moved to the first place).]]></description>
</item>
<item>
    <title>3. Time Complexity - PermMissingElem</title>
    <link>https://h3yon.github.io/3_time_complexity_permmissingelem/</link>
    <pubDate>Sat, 03 Sep 2022 16:47:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/3_time_complexity_permmissingelem/</guid>
    <description><![CDATA[PermMissingElem Link: https://app.codility.com/programmers/lessons/3-time_complexity/perm_missing_elem/
An array A consisting of N different integers is given. The array contains integers in the range [1..(N + 1)], which means that exactly one element is missing.
Your goal is to find that missing element.
Write a function:
class Solution { public int solution(int[] A); }
that, given an array A, returns the value of the missing element.
For example, given array A such that:
A[0] = 2]]></description>
</item>
<item>
    <title>Week Preparation Kit</title>
    <link>https://h3yon.github.io/1_iterations/</link>
    <pubDate>Sun, 28 Aug 2022 23:47:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/1_iterations/</guid>
    <description><![CDATA[주제: 1. Iterations BinaryGap A binary gap within a positive integer N is any maximal sequence of consecutive zeros that is surrounded by ones at both ends in the binary representation of N.
For example, number 9 has binary representation 1001 and contains a binary gap of length 2. The number 529 has binary representation 1000010001 and contains two binary gaps: one of length 4 and one of length 3. The number 20 has binary representation 10100 and contains one binary gap of length 1.]]></description>
</item>
<item>
    <title>상속보다는 컴포지션(조합)</title>
    <link>https://h3yon.github.io/use_composition/</link>
    <pubDate>Tue, 02 Aug 2022 03:47:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/use_composition/</guid>
    <description><![CDATA[상속보다는 컴포지션(조합) Background 코드를 짜면서 상속으로 중복 코드도 줄일 수 있고,
더 효율적으로 생각되었다.
근데 언제부턴가 상속보다는 조합을 사용하란 말이 많아졌다.
예시를 보자.
1 2 3 4  public class PurchasedProduct { protected List&lt;Integer&gt; productNo; ... }   위의 클래스를 상속 받는 클래스가 있다고 가정하자.
1 2 3 4  public class Purchased extends PurchasedProduct { private List&lt;Integer&gt; dealNo; ... }   그런데 상위 PurchasedProduct 에서 List 대신 int[] productNo 로 바뀌었다고 가정하면]]></description>
</item>
<item>
    <title>[Github]git 계정 분리해서 사용하기</title>
    <link>https://h3yon.github.io/separate-account/</link>
    <pubDate>Sun, 08 May 2022 20:34:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/separate-account/</guid>
    <description><![CDATA[참고 및 출처:
 폴더별 github 계정 분리하기 Why .gitconfig [includeIf] does not work?  한 기기 내에서 2개의 git 계정을 사용하고 싶을 때 git계정을 분리하여 사용할 수 있다.
위 블로그에 너무 잘 작성되어 있어서 정리해보려고 한다. 회사, 개인용 git 계정을 사용한다고 가정하고 아래처럼 따라할 수 있다!
1. SSH Key 생성 window는 ~가 아니라 c:/{사용자}/{사용자 아이디} 디렉토리
1 2 3 4 5  $ mkdir ~/.ssh $ cd ~/.ssh $ ssh-keygen -t rsa -C &#34;회사용 github 아이디@email.]]></description>
</item>
<item>
    <title>모던 자바 인 액션 1~6장 스트림</title>
    <link>https://h3yon.github.io/modern-java-1/</link>
    <pubDate>Tue, 26 Apr 2022 01:50:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/modern-java-1/</guid>
    <description><![CDATA[모던 자바 인 액션 1~6장 스트림 아는 내용은 정리 생략해서
자세한 내용을 원하시는 분은 다른 포스팅 보기를 추천 드립니다!
1장 자바 8, 9, 10, 11? 자바 8에서는 메서드를 값으로 취급할 수 있도록 했다. 이 기능은 스트림 같은 다른 기능의 토대를 제공했다.
 외부 반복?
기존 컬렉션 API에서 for-each로 반복 과정 직접 처리 내부 반복?
스트림 API 사용함으로써 API 내부에서 모든 데이터가 처리된다.  자바 8에서는 Optional도 제공한다.
2장 동작 파라미터화 코드 전달하기   동작 파라미터?]]></description>
</item>
<item>
    <title>스프링 핵심 원리 복습 일지#1</title>
    <link>https://h3yon.github.io/spring-core1/</link>
    <pubDate>Thu, 14 Apr 2022 23:56:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/spring-core1/</guid>
    <description><![CDATA[스프링 핵심 원리(기본편) 생성일: 2022년 4월 10일 오후 5:00
0. 객체 지향 설계와 스프링 EJB(Enterprise Java Beans)
 트랜잭션이 좋다. 분산 기술이 좋았다. 엔티티빈(JPA ORM)도 가지고 있었다. 비용이 비싸다. 어렵고 복잡하고 느리다(EJB에 의존적으로 코드를 짜야 한다, 컨테이너 띄우는 게 느리다).  → 순수하게 자바로 돌아가자. (POJO Plain Old Java Object)
로드존슨이 EJB를 비판하면서 미래 스프링의 기틀을 다져준다. 링킹이 Hibernate 등장. 자바 표준 JPA 구현체로 사용될 수 있다.
 스프링 오픈소스 제안 → EJB란 겨울을 넘어 새로운 시작으로 지음  스프링 역사]]></description>
</item>
</channel>
</rss>
