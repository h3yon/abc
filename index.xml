<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>h3yon blog</title>
        <link>https://h3yon.github.io/</link>
        <description>Welcome to h3yon 개구리 블로그</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 11 Feb 2023 11:50:34 &#43;0900</lastBuildDate>
            <atom:link href="https://h3yon.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>스프링 클라우드 openfeign 파악하기</title>
    <link>https://h3yon.github.io/spring-cloud-openfeign/</link>
    <pubDate>Sat, 11 Feb 2023 11:50:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/spring-cloud-openfeign/</guid>
    <description><![CDATA[개발을 하면서 외부 요청을 날릴 때 보통은 restTemplate(이제는 webclient)만 주로 사용했었다.
비동기 프로그래밍 방식을 주로 다루었어서 webclient를 많이 사용했었다.
이번에 동기 프로그래밍 방식을 주로 다루게 되어서 외부 요청을 날릴 때 어떤 걸 주로 사용하는지 확인해봤다. 동기 프로그래밍의 경우 OpenFeign을 주로 사용한다는 걸 알게 됐다.
그외 retrofit 도 주로 사용되는 부분을 보았는데, 서버 사이드 쪽에서는 openFeign이 잘 사용된다고 해서 openFeign을 공부해보기로 했다.
openFeignClient를 사용해보자!
출처
 https://www.baeldung.com/spring-cloud-openfeign  환경설정 dependency는 아래와 같다.]]></description>
</item>
<item>
    <title>[Elasticsearch] 기초부터 다지는 ElasticSearch 운영 노하우2</title>
    <link>https://h3yon.github.io/elasticsearch2/</link>
    <pubDate>Sun, 09 Oct 2022 19:00:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/elasticsearch2/</guid>
    <description><![CDATA[Elasticsearch 운영 노하우: 버전, 샤드배치 1. Elasticsearch Head, 모니터링 툴 첨부된 사진처럼 크롬 익스텐션 으로 설치하거나, 깃허브 로 설치할 수 있다. 원래는 크롬 익스텐션을 애용하였는데, 2022년 6월 기준으로 익스텐션이 Multi Elasticsearch Head 로 변경된 것으로 보인다.
2. 버전 업그레이드 종류   Full Cluster Restart
전체 노드를 재시작하는 방식, 다운타임 발생하지만 빠르게 버전 업그레이드 가능
  Rolling Restart
노드는 순차적으로 한대씩 재시작하는 방식, 다운타임은 없지만 노드 개수에 따라 소요 시간이 길어질 수 있다.]]></description>
</item>
<item>
    <title>[Elasticsearch] 기초부터 다지는 ElasticSearch 운영 노하우1</title>
    <link>https://h3yon.github.io/elasticsearch1/</link>
    <pubDate>Sun, 09 Oct 2022 15:00:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/elasticsearch1/</guid>
    <description><![CDATA[Elasticsearch 개요와 쿼리 1. NoSQL이란?  빅데이터 환경에서 데이터가 기하급수적으로 늘어남에 따라 RDB 저장 및 관리 기술 만으로 감당하기 힘들어서 등장한 Database Elasticsearch는 Document 기반의 Data 저장소     RDB NoSQL     Column과 Row 형태 JSON, Key-Value 형태   SQL로 질의 REST API, 명령어로 질의   스키마 필수 스키마리스   부하분산 어려움 분산형 구조    2. Elasticsearch란? 루씬 기반의 오픈소스 검색 엔진으로,]]></description>
</item>
<item>
    <title>3. Time Complixity - TapeEquilibrium</title>
    <link>https://h3yon.github.io/3_time_complexity_tapeequilibrium/</link>
    <pubDate>Sun, 04 Sep 2022 14:47:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/3_time_complexity_tapeequilibrium/</guid>
    <description><![CDATA[TapeEquilibrium Link: https://app.codility.com/programmers/lessons/3-time_complexity/tape_equilibrium/
A non-empty array A consisting of N integers is given. Array A represents numbers on a tape.
Any integer P, such that 0 &lt; P &lt; N, splits this tape into two non-empty parts: A[0], A[1], &hellip;, A[P − 1] and A[P], A[P + 1], &hellip;, A[N − 1].
The difference between the two parts is the value of: |(A[0] + A[1] + &hellip; + A[P − 1]) − (A[P] + A[P + 1] + &hellip; + A[N − 1])|]]></description>
</item>
<item>
    <title>3. Time Complexity - FrogJmp</title>
    <link>https://h3yon.github.io/3_time_complexity_frogjmp.md/</link>
    <pubDate>Sat, 03 Sep 2022 18:27:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/3_time_complexity_frogjmp.md/</guid>
    <description><![CDATA[FrogJmp Link: https://app.codility.com/programmers/lessons/3-time_complexity/frog_jmp/
A small frog wants to get to the other side of the road. The frog is currently located at position X and wants to get to a position greater than or equal to Y. The small frog always jumps a fixed distance, D.
Count the minimal number of jumps that the small frog must perform to reach its target.
Write a function:
def solution(X, Y, D)
that, given three integers X, Y and D, returns the minimal number of jumps from position X to a position equal to or greater than Y.]]></description>
</item>
<item>
    <title>2. Array - OddOccurrencesInArray</title>
    <link>https://h3yon.github.io/2_array_oddoccurrencesinarray/</link>
    <pubDate>Sat, 03 Sep 2022 17:47:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/2_array_oddoccurrencesinarray/</guid>
    <description><![CDATA[OddOccurrencesInArray Link: https://app.codility.com/programmers/lessons/2-arrays/odd_occurrences_in_array/
A non-empty array A consisting of N integers is given.
The array contains an odd number of elements, and each element of the array can be paired with another element that has the same value, except for one element that is left unpaired.
For example, in array A such that:
A[0] = 9 A[1] = 3 A[2] = 9.
A[3] = 3 A[4] = 9 A[5] = 7.]]></description>
</item>
<item>
    <title>2. Array - CyclicRotation</title>
    <link>https://h3yon.github.io/2_array_cyclicrotation/</link>
    <pubDate>Sat, 03 Sep 2022 16:47:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/2_array_cyclicrotation/</guid>
    <description><![CDATA[주제: Arrays CyclicRotation Link: https://app.codility.com/programmers/lessons/2-arrays/cyclic_rotation/
An array A consisting of N integers is given. Rotation of the array means that each element is shifted right by one index, and the last element of the array is moved to the first place. For example, the rotation of array A = [3, 8, 9, 7, 6] is [6, 3, 8, 9, 7] (elements are shifted right by one index and 6 is moved to the first place).]]></description>
</item>
<item>
    <title>3. Time Complexity - PermMissingElem</title>
    <link>https://h3yon.github.io/3_time_complexity_permmissingelem/</link>
    <pubDate>Sat, 03 Sep 2022 16:47:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/3_time_complexity_permmissingelem/</guid>
    <description><![CDATA[PermMissingElem Link: https://app.codility.com/programmers/lessons/3-time_complexity/perm_missing_elem/
An array A consisting of N different integers is given. The array contains integers in the range [1..(N + 1)], which means that exactly one element is missing.
Your goal is to find that missing element.
Write a function:
class Solution { public int solution(int[] A); }
that, given an array A, returns the value of the missing element.
For example, given array A such that:
A[0] = 2]]></description>
</item>
<item>
    <title>Week Preparation Kit</title>
    <link>https://h3yon.github.io/1_iterations/</link>
    <pubDate>Sun, 28 Aug 2022 23:47:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/1_iterations/</guid>
    <description><![CDATA[주제: 1. Iterations BinaryGap A binary gap within a positive integer N is any maximal sequence of consecutive zeros that is surrounded by ones at both ends in the binary representation of N.
For example, number 9 has binary representation 1001 and contains a binary gap of length 2. The number 529 has binary representation 1000010001 and contains two binary gaps: one of length 4 and one of length 3. The number 20 has binary representation 10100 and contains one binary gap of length 1.]]></description>
</item>
<item>
    <title>상속보다는 컴포지션(조합)</title>
    <link>https://h3yon.github.io/use_composition/</link>
    <pubDate>Tue, 02 Aug 2022 03:47:34 &#43;0900</pubDate>
    <author>h3yon</author>
    <guid>https://h3yon.github.io/use_composition/</guid>
    <description><![CDATA[상속보다는 컴포지션(조합) Background 코드를 짜면서 상속으로 중복 코드도 줄일 수 있고,
더 효율적으로 생각되었다.
근데 언제부턴가 상속보다는 조합을 사용하란 말이 많아졌다.
예시를 보자.
1 2 3 4  public class PurchasedProduct { protected List&lt;Integer&gt; productNo; ... }   위의 클래스를 상속 받는 클래스가 있다고 가정하자.
1 2 3 4  public class Purchased extends PurchasedProduct { private List&lt;Integer&gt; dealNo; ... }   그런데 상위 PurchasedProduct 에서 List 대신 int[] productNo 로 바뀌었다고 가정하면]]></description>
</item>
</channel>
</rss>
